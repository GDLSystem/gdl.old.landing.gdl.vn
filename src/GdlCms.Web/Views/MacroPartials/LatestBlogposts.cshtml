@using ContentModels = Umbraco.Web.PublishedModels;
@using Umbraco.Web;
@inherits Umbraco.Web.Macros.PartialViewMacroPage
@{
    var startNodeId = Model.MacroParameters["startNodeId"] != null ? Model.MacroParameters["startNodeId"] : Model.Content.Id;


    var numberOfPosts = 3;
    if (Model.MacroParameters["numberOfPosts"] != null)
    {
        int.TryParse((string) Model.MacroParameters["numberOfPosts"], out numberOfPosts);
    }


}
@if (startNodeId != null)
{
    @* Get the starting page *@
    var startNode = Umbraco.Content(startNodeId);

    if (startNode == null)
    {
        <div class="blogposts">
            <h1>There are no posts at this time, try again later.</h1>
        </div>

        return;
    }

    //Gets all blogposts to calculate pages
    var blogposts = startNode.Children.OrderBy(x => x.CreateDate).ToList();
    var pageCount = (int) Math.Ceiling((double) blogposts.Count / (double) numberOfPosts);
    //gets the page from the querystring and sets it to one if it is out of range
    var page = 1;
    if (!string.IsNullOrEmpty(Request.QueryString["page"]))
    {
        int.TryParse(Request.QueryString["page"], out page);
        if (page <= 0 || page > pageCount)
        {
            page = 1;
        }
    }
    //Gets the blogposts for the current page
    var pagedBlogposts = blogposts.Skip((page - 1) * numberOfPosts).Take(numberOfPosts).ToList();

    if (pagedBlogposts.Count > 0)
    {
        <div class="container blogposts mb-30">
            <div class="row">
                @foreach (var post in pagedBlogposts.Cast<Blogpost>())
                {
                    <div class="col-md-6 blogpost">
                        <a href="@post.Url()">
                            <div class="w-100 mb-10">
                                <img class="image w-100" src="@(post.MainImage?.GetCropUrl())"/>
                            </div>
                            <h4 class="blogpost-title">@post.PageTitle</h4>
                            <div class="blogpost-excerpt">@post.Excerpt</div>
                            <div class="blogpost-meta">
                                <small class="blogpost-date"><i class="fa fa-calendar mr-2"></i>@post.CreateDate.ToShortDateString()</small>
                                <small> - </small>
                                <small class="blogpost-cat">
                                    <i class="fa fa-tags mr-2"></i>
                                    @Html.Partial("~/Views/Partials/CategoryLinks.cshtml", post.Categories)
                                </small>
                            </div>
                        </a>
                    </div>
                }
            </div>
        </div>
    }

    if (blogposts.Count > numberOfPosts)
    {
        <ul class="pagination pagination-success">
            @if (page > 1)
            {
                <li>
                    <a href="@(Model.Content.Url + "?page=" + (page - 1))">«</a>
                </li>
            }

            @for (int i = 1; i <= pageCount; i++)
            {
                <li class="@(page == i ? "active" : null)">
                    <a href="@(Model.Content.Url + "?page=" + i)">@i</a>
                </li>
            }
            @if (page != pageCount)
            {
                <li>
                    <a href="@(Model.Content.Url + "?page=" + (page + 1))">»</a>
                </li>
            }
        </ul>
    }
}